@startuml
'https://plantuml.com/class-diagram


enum Color {
AZUL,
MARRON,
NARANJA,
AMARILLO,
ROJO,
ROSA,
NEGRO,
BLANCO
}

enum TipoMaterial {
POLIESTER,
ALGODON,
JEAN,
CUERO
}
enum Categoria {
PARTE_SUPERIOR,
PARTE_INFERIOR,
CALZADO,
ACCESORIO
}

enum TipoPrenda {
REMERA
BUZO
PANTALON
ZAPATOS
}

enum Trama {
LISA,
RAYADA,
LUNARES,
A_CUADROS,
ESTAMPADO
}

class Prenda {
tipoPrenda : TipoPrenda
material : TipoMaterial
colorPrimario : Color
colorSecundario : Color
trama : Trama

}

class Borrador {
tipoPrenda : TipoPrenda
material : TipoMaterial
colorPrimario : Color
colorSecundario : Color
trama : Trama

setTrama(Trama)
setColorPrimario(Color)
setColorSecundario(Color)
setMaterial(TipoMaterial)
setTipoPrenda(TipoPrenda)
buildPrenda() : Prenda
}

class Sugerencia {
parteSuperior : Prenda
parteInferior : Prenda
calzado : Prenda
}

class Usuario {
prendas : List<Prenda>
edad : Integer
motorDeSugerencias : MotorDeSugerencias
}

enum Formalidad {
FORMAL
INFORMAL
NEUTRO
}

abstract MotorDeSugerencias {
   generarSugerenciaCon(List<Prenda> prendas, Integer edad): List<Sugerencia>
}

class MotorDeSugerenciasBasico {
}

class MotorSugerenciasFormal {
}

class MotorUsado {

}

Prenda --> Color
Prenda --> TipoMaterial
Prenda --> TipoPrenda
Prenda --> Trama
Prenda --> Formalidad
Usuario --> Prenda : *
Usuario --> MotorDeSugerencias
TipoPrenda --> Categoria
Sugerencia -> Prenda
Borrador ..> Prenda : <Creates>
MotorDeSugerenciasBasico ..|> MotorDeSugerencias
MotorSugerenciasFormal ..|> MotorDeSugerencias
MotorUsado --> MotorDeSugerencias
Usuario ---> Ropero
Ropero -> MotorSugerenciasFormal
MotorSugerenciasFormal -> Sugerencia
Usuario --> AccuWeatherAPI
Ropero --> Propuesta : *
Propuesta --> Prenda



@enduml